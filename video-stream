#!/bin/bash
# you can find your proper video device and resolutions with the following commands:
# v4l2-ctl --list-devices
# v4l2-ctl -d /dev/video0 --list-formats-ext

# source video stream ini file
if [ -f "$0.ini" ]; then
    . $0.ini
else
    echo "$0.ini does not exist."
    exit 1
fi


# get Debian/Raspian OS version
osver=`cat /etc/debian_version`
osver=${osver%%.*}

# stop already running process (just in case)
pkill gst-launch-1.0
pkill ffmpeg

# start udp streaming and choose codec according to OS version
if [ "$engine" = "ffmpeg" ]
then
    font_size=40
    ffmpeg -s $video_width\x$video_height -f video4linux2 -i $usb_camera -r $video_frame \
          -vf "drawtext = fontfile = /usr/share/fonts/truetype/ttf-dejavu/DejaVuSans-Bold.ttf: \
          text ='$apparatus_location ($apparatus_name $apparatus_id) - %{localtime\:%X}': :fontsize=$font_size:fontcolor=black:box=1:boxcolor=white@0.5$ \
          -pix_fmt yuv420p -an -c:v libx264 -profile:v baseline  -tune zerolatency -flags global_header -bsf dump_extra \
          -f rtp" rtp://$video_server:$video_port/?pkt_size=1000
elif [ "$osver" -gt "10" ]; then
    gst-launch-1.0 v4l2src device=$usb_camera ! video/x-raw,width=$video_width,height=$video_height,framerate=$video_frame/1 ! clockoverlay time-format="%x - %X" ! videoconvert ! v4l2h264enc ! 'video/x-h264,level=(string)3' ! h264parse ! rtph264pay config-interval=1 pt=126 ! udpsink host=$video_server port=$video_port async=false
else
    gst-launch-1.0 v4l2src device=$usb_camera ! video/x-raw,width=$video_width,height=$video_height,framerate=$video_frame/1 ! clockoverlay time-format="%x - %X" ! videoconvert ! omxh264enc ! h264parse ! rtph264pay config-interval=1 pt=126 ! udpsink host=$video_server port=$video_port async=false
fi
